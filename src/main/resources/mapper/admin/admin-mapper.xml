<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	<!-- 회원 리스트조회	 -->
	<select id="allMember" resultMap="memberMap">
		select * from member order by seq_member_no
	</select>
	<resultMap type="map" id="memberMap"></resultMap>	
	<select id="countallMember" resultType="_int">
		select count(*) from member
	</select>
	
	<!-- 회원 리스트 조회 검색(type/search) -->
	<select id="memberSearch" resultMap="memberMap">
		select * from member where ${type} like '%'||#{search}||'%'
	</select>
	<select id="countmemberSearch" resultType="_int">
		select count(*) from member where ${type} like '%'||#{search}||'%'
	</select>

	<!-- 회원 1명 정보  -->	
	<select id="memberOne" resultMap="memberMap">
		select * from member where member_id = #{memberId}
	</select>
	
	<!-- 쿠폰 다 가져오기 -->
	<select id="couponAll" resultMap="couponAllMap">
		select * from coupon
	</select>
	<resultMap type="map" id="couponAllMap"></resultMap>
	
	<!-- 권한 부여 -->
	<update id="updateisAdmin">
		update member set member_isAdmin =#{isAdmin} where member_id = #{memberId}
	</update>
	
	<!-- 쿠폰지급 > 쿠폰리스트 테이블에 insert -->
	<insert id="couponPlus" parameterType="map">
		insert into coupon_listt values(#{memberNo},sysdate+1,#{couponNo},'N')
	</insert>
	
	<!-- 개인 쿠폰 지급 내역 -->
	<select id="couponList" resultMap="couponAllMap">
		select C.*,l.coupon_status,l.user_date as endDay 
		from coupon c join  coupon_listt l on c.seq_coupon_no = l.seq_coupon_no
   		where l.seq_member_no = #{memberNo} order by l.user_date desc
	</select>
	
	<!-- 관리자가 고객 쿠폰 삭제 -->
	<delete id="deleteCoupon" >
		delete from coupon_listt where seq_member_no = #{memberNo} and seq_coupon_no = #{seqcouponNo}
	</delete>
	
	<!-- 유효기간 지난 쿠폰 삭제 -->
	<delete id="couponAutoDelete">
		delete from coupon_listt where user_date <![CDATA[ < ]]> sysdate
	</delete>
	
	<!-- 결제된 겟잇/직접 리스트 -->
	<select id="paidProduct" resultMap="padiProductMap">
		select pi.*,m.member_id as memberId
		from product_io pi join member m on pi.seq_member_no = m.seq_member_no
		order by pi.seq_product_no
	</select>
	<resultMap type="map" id="padiProductMap"></resultMap>	
	<select id="countpaidProduct" resultType="_int">
		select count(*)
		from product_io pi join member m on pi.seq_member_no = m.seq_member_no
		order by pi.seq_product_no
	</select>
	
	<!-- 결제된 경매 리스트 -->
	<select id="paidAuction" resultMap="paidAuctionMap">
		select * from auction where auction_check='Y' order by auction_no
	</select>
	<resultMap type="map" id="paidAuctionMap"></resultMap>	
	<select id="countpaidAuction" resultType="_int">
		select count(*) from auction where auction_check='Y' order by auction_no
	</select>
	
	<!-- 결제된 상품리스트 검색(type/search) -->
	<select id="paidProductSearch" resultMap="paidProductSearch">
		select * from product_io where ${type} like '%'||#{search}||'%' order by seq_product_no desc
	</select>
	<resultMap type="map" id="paidProductSearch"></resultMap>
	<select id="countpaidProductSearch" resultType="_int">
		select count(*) from product_io where ${type} like '%'||#{search}||'%'
	</select>
	
	<!-- 결제된 경매리스트 검색(type/search) -->
	<select id="paidAuctionSearch" resultMap="paidAuctionSearchMap">
		select * from auction where auction_check='Y' and ${type} like '%'||#{search}||'%' order auction_no desc
	</select>
	<resultMap type="map" id="paidAuctionSearchMap"></resultMap>
	<select id="countpaidAuctionSearch" resultType="_int">
		select count(*) from auction where auction_check='Y'and ${type} like '%'||#{search}||'%'
	</select>
	
	<!-- 하나의 판매신청 가져오기 Map타입 -->
	<select id="registOne" resultMap="registMap">
		select R.*,CA.category_name AS exCategoryMacro ,CI.category_name AS exCategoryMicro 
		from regist R,
			category_micro CI,
		    category_macro CA
		where 
		    R.category_macro = CA.category_macro
		    and
		    R.category_micro = CI.category_micro
		    and
		    CA.category_macro = CI.category_macro
		    and
		    R.seq_regist_no = #{registNo}
	</select>
	<resultMap type="map" id="registMap"></resultMap>
	
	<!-- 하나의 판매신청 가져오기 VO타입(regist) -->
	<select id="registOne1" resultType="regist">
		select * from regist where seq_regist_no = #{registNo}
	</select>
	
	<!-- category_macro 호출 -->
	<select id="categoryMa" resultType="categoryMacro">
		select* from category_macro
	</select>
	
	<!-- category_micro 호출 -->
	<select id="categoryMi" resultType="category">
		select* from category_micro where category_macro = #{macro} 	
	</select>
	
	<!-- 판매신청 승인, Reigst테이블 >> Product테이블 insert -->
	<insert id="insertProduct" parameterType="map">
		insert into product(SEQ_PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_AUCTION, 
	PRODUCT_ONSALE, PRODUCT_MANUFACTURER, PRODUCT_STOCK, PRODUCT_IMAGE, 
	PRODUCT_REAL_IMAGE, PRODUCT_MILEGE, PRODUCT_DESCRIPTION, PRODUCT_EVENT, 
	PRODUCT_ENROLL_DATE, PRODUCT_RECOMMEND, PRODUCT_KINDS, CATEGORY_MICRO, 
	CATEGORY_MACRO, SELLER_NO,SEQ_AUCTION_NO,PRODUCT_ADMIN_DESCRIPTION) 
	
		values(seq_product_no.nextval,#{registName},#{registPrice},#{registStatus},
		'Y',#{registManufacturer},#{registAmount},#{registImage},
		#{registRealImage},#{registPrice}*0.001,#{registDescription},'N'
		,#{registDate},'N',#{registKinds},#{cMi0},#{cMa},#{seqMemberNo},
		SEQ_AUCTION_NO.nextval,#{registAdminDescription})
	</insert>
	
	<!-- 판매신청 승인시, regist테이블 reigst_auction값 Y로 update -->
	<update id="updateRegist">
		update regist set regist_auction = 'Y' where seq_regist_no= #{registNo}
	</update>
	
	<!-- 판매 신청 취소시, regist테이블 regist_auction값 C로 update -->
	<update id="registAuction">
		update regist set regist_auction = 'C' where seq_regist_no= #{registNo}
	</update>
	
	<!-- 판매취소 된 목록 가져오기 -->
	<select id="registCancel" resultMap="registCancelMap">
		select * from regist where regist_auction = 'C' order by seq_regist_no
	</select>
	<resultMap type="map" id="registCancelMap"></resultMap>
	
	<!-- 판매신청 리스트 페이징 겟잇베이직 -->
	<select id="registList" resultMap="registListMap">
		select r.*,m.member_id as memberId 
		from regist r join member m on r.seq_member_no = m.seq_member_no
		where r.regist_auction = 'N' and r.regist_status='Y' order by r.seq_regist_no
	</select>
	<resultMap type="map" id="registListMap"></resultMap>	
	<select id="countpaidregistList" resultType="_int">
		select count(*) from regist where regist_auction = 'N' and regist_status='Y'
	</select>
	
	<!-- 상품 판매 신청 리스트 직접 판매 -->
	<select id="registListMore" resultMap="registListMoreMap">
		select r.*,m.member_id as memberId 
		from regist r join member m on r.seq_member_no = m.seq_member_no
		where r.regist_auction = 'N' and r.regist_status='N' order by r.seq_regist_no
	</select>
	<resultMap type="map" id="registListMoreMap"></resultMap>	
	<select id="countpaidregistListMore" resultType="_int">
		select count(*) from regist where regist_auction = 'N' and regist_status='N'
	</select>
	
	
	<!--판매 상품 리스트 -->
	<select id="productList" resultMap="productListMap">
		select p.*,m.member_id as memberId
		from product p join member m on p.seller_no = m.seq_member_no
		where p.product_onsale ='N' 
		order by p.seq_product_no
	</select>
	<resultMap type="map" id="productListMap"></resultMap>	
	<select id="countproductList" resultType="_int">
		select count(*) from product where product_onsale ='N'
	</select>
	
	
	<select id="productListSearch" resultMap="productListMap">
		select * from product where ${type} like '%'||#{search}||'%'
	</select>
	<select id="countproductListSearch" resultType="_int">
		select count(*) from product where ${type} like '%'||#{search}||'%'
	</select>
	
	
	<!-- 경매 신청 리스트 -->
	<select id="auctionRegistList" resultMap="auctionRegistListMap">
		select * from auction_regist where auction_check='N' order by auction_regist_no
	</select>
	<resultMap type="map" id="auctionRegistListMap"></resultMap>
	
	<!-- auction_regist Map으로 뽑음 -->
	<select id="auctionRegistOne" resultMap="auctionRegistOneMap">
		select R.* ,CA.category_name AS exCategoryMacro ,CI.category_name AS exCategoryMicro 
		from auction_regist R,
		    category_micro CI,
		    category_macro CA 
		where  R.category_macro = CA.category_macro
		    and
		    R.category_micro = CI.category_micro
		    and
		    CA.category_macro = CI.category_macro
		    and
		    auction_regist_no = #{acutionRegistNo}
	</select>
	<resultMap type="map" id="auctionRegistOneMap"></resultMap>
	
	<!-- auction_regist Vo로 뽑음 -->
	<select id="auctionRegistOne1" resultType="auction">
		select * from auction_regist where auction_regist_no = #{auctionRegistNo}
	</select>
	
	<!-- auctionRegist 승인시 auction테이블로 insert -->
	<insert id="inAuction" parameterType="map">
		insert into auction values(auction_no.nextval , #{seqMemberNo}, #{sdate} , #{edate} ,#{auctionTitle}
			, #{auctionImageMain} , #{auctionImageSub1} , #{auctionImageSub2} , #{auctionImageSub3} 
			, #{auctionPrice} , #{auctionStatus} , #{auctionMember} , #{auctionPhone} , #{auctiondetail}
			, #{auctionCategoryMicro} ,#{auctionCategoryMacro},default,default,null)
	</insert>
	
	<!-- auctionRegist 승인시 auction_check='Y' -->
	<update id="updateAuctionRegist" >
		update auction_regist set auction_check='Y'where auction_regist_no= #{auctionRegistNo}
	</update>
	
	<!-- auction 취소시 auction_check='C' -->
	<update id="auctionCencel" >
		update auction_regist set auction_check='C'where auction_regist_no= #{auctionRegistNo}
	</update>
	
	<!-- 경매 상품 현황 -->
	<select id="auctionList" resultMap="auctionListMap">
		select * from auction order by auction_no
	</select>
	<resultMap type="map" id="auctionListMap"></resultMap>	
	<select id="countauctionList" resultType="_int">
		select count(*) from auction
	</select>
	
	<select id="auctionListSearch" resultMap="auctionListMap">
		select * from auction where ${type} like '%'||#{search}||'%'
	</select>
	<select id="countauctionListSearch" resultType="_int">
		select count(*) from auction where ${type} like '%'||#{search}||'%'
	</select>
	
	<!-- 1:1질문답변 -->
	<select id="questionAnswer" resultMap="questionAnswerMap">
		select * from question where question_result = 'N' order by question_date desc
	</select>
	<resultMap type="map" id="questionAnswerMap"></resultMap>	
	<select id="countquestionAnswer" resultType="_int">
		select count(*) from question where question_result = 'N'
	</select>
	
	<select id="questionAnswerY" resultMap="questionAnswerMapY">
		select * from question where question_result = 'Y' order by question_date desc
	</select>
	<resultMap type="map" id="questionAnswerMapY"></resultMap>	
	<select id="countquestionAnswerY" resultType="_int">
		select count(*) from question where question_result = 'Y'
	</select>
	
	
	<!-- 사이트 통계 -->
	<!-- 남/녀 비율 -->
	<select resultMap="memberGenderMap" id="memberGender">
		select count(*) as cnt from member group by gender
	</select>
	<resultMap id="memberGenderMap" type="map"/>
	
	<!-- 결제된 상품 비율 -->
	<select id="paidProductCategory" resultMap="paidProductCategoryMap">
		SELECT A.category_macro as macro, A.category_name as name, nvl(B.cnt, 0) as cnt
		FROM category_macro A 
 		LEFT OUTER JOIN ( 
   			SELECT 
    		category_macro, COUNT(*) AS cnt 
     		FROM product_io 
    		GROUP BY category_macro
  		) B on (A.category_macro = B.category_macro)
	</select>
	<resultMap type="map" id="paidProductCategoryMap"/>
	
	<!-- 판매 상품 비율 -->
	<select id="registCategory" resultMap="registCategoryMap">
		SELECT A.category_macro as macro, A.category_name as name, nvl(B.cnt, 0) as cnt
		FROM category_macro A 
 		LEFT OUTER JOIN ( 
    		SELECT category_macro, COUNT(*) AS cnt 
      		FROM product
      		GROUP BY category_macro
  		) B on (A.category_macro = B.category_macro)
	</select>
	<resultMap type="map" id="registCategoryMap"></resultMap>
	
	<!-- 경매 상품 비율 -->
	<select id="auctionCategory" resultMap="auctionCategoryMap">
		select A.category_macro, A.category_name as name, nvl(B.cnt,0) as cnt
		from  category_macro A
		left outer join(
			select auction_category_macro, count(*)as cnt
			from auction
			group by auction_category_macro
		) B on(A.category_macro = B.auction_category_macro)
	</select>
	<resultMap type="map" id="auctionCategoryMap"></resultMap>
	
	<!-- 1:1질문 비율 -->
	<select id="questionCategory" resultMap="questionCategoryMap">
		select distinct question_mkinds as name, count(*) as cnt
		from question
		group by question_mkinds
	</select>
	<resultMap type="map" id="questionCategoryMap"></resultMap>
	
	<update id="interestDelete" >
		update member set member_interest = NULL where seq_member_no = #{memberNo}
	</update>
	
	<update id="memberUpdate" >
		update member set member_name= #{memberName},gender=#{gender},member_mail_no=#{memberMailNo},
		member_address=#{memberAddress},member_addressDetail=#{memberAddressDetail},member_phone=#{memberPhone},
		member_mileage=#{memberMileage}, member_email=#{memberEmail}, member_birth = #{memberBirth} where seq_member_no = #{seqMemberNo}
	</update>
	
	<update id="memberUpdate1" >
		update member set member_name= #{memberName},gender=#{gender},member_mail_no=#{memberMailNo},
		member_address=#{memberAddress},member_addressDetail=#{memberAddressDetail},member_phone=#{memberPhone},
		member_mileage=#{memberMileage}, member_email=#{memberEmail}, member_birth = #{memberBirth} where seq_member_no = #{seqMemberNo}
	</update>
	
</mapper>
